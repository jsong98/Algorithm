리그 개수 L
  각 리그는 0 ~ L-1의 ID값을 가짐
  리그의 ID값이 작을수록 더 우수한 리그
선수 수 N
  능력과 ID값으로 평가
  능력이 높을수록 우수, 능력이 같다면 ID가 낮을수록 더 좋은 선수

리그 초기에는 앞 번호 리그부터 선수들의 ID 순서대로 N/L명씩 차례대로 배치
  이 때, N은 L의 배수 && N/L == oddNum

--승강제
각각의 리그에서 능력이 가장 좋지 않은 선수는 바로 아래 리그로,
능력이 가장 좋은 선수는 바로 위 리그로 올라감
  모든 리그에서 이동하기 때문에 L개의 리그에서 이동하는
  선수들은 총(L-1)*2명
  0번 리그의 능력이 가장 좋은 선수와 L-1번리그의 능력이 가장 좋지않은
  선수는 이동하지 않음


--트레이드 제도
각각의 리그에서 능력이 가장 좋은 선수를 바로 위 리그의
중간 급 능력의 선수와 맞교환하는 제도
  리그 내의 중간 급 능력의 선수란 리그 내에 M명이 존재할 때,
  ((M+1 / 2)번째 능력이 좋은 선수
  첫번째와 마지막 리그의 중간급 선수는 이동하지 않음


void init(int N, int L, int mAbility[]) {
  선수ID 0 ~ N-1, ID가 i인 선수의 능력값은 mAbility[i]
  리그ID 0 ~ L-1, 
  N은 L의 배수 && N/L은 홀수
  9 <= N <= 39,990
  3 <= L <= 10, 3 <= N/l <= 3,999
  1 <= mAbility[] <= 10,000
}

int move() {
  각 리그 별로 능력이 가장 좋은 선수와 상위 리그의 가장 나쁜 선수를 선발하여 교환,
  전체 리그에서 이동한 선수들의 ID 값의 합을 return
  능력치가 높을수록 좋은 선수, 능력치가 같다면 ID가 낮을수록 좋은 선수
}

int trade() {
  각 리그 별 능력이 가장 좋은 선수와 상위 리그의 중간급 선수를 선발하여 교환,
  전체 리그에서 이동한 선수들의 ID값을 return
}




